#!/usr/bin/env bash

set -e

readonly scriptname="${0##*/}"
readonly version=0.9

here=$(pwd)
here="${here/#\~/$HOME}"


function usage() {
  cat <<USAGE >&2
Usage: $scriptname

Create symlinks to version-controlled files.

The environment variable SYMLINKTO_TREE should point to the root of
the version-controlled repository of symlink target files.

  -h   show this help
  -v   show script version

 Author: Taro Sato <okomestudio@gmail.com>
   Date: September 13, 2024
    WWW: https://github.com/okomestudio/symlinkto
Version: $scriptname $version
USAGE
  exit "${1:-1}"
}


function error() {
  >&2 echo "$scriptname: $1"
  >&2 echo "Try '$scriptname -h' for more information."
  exit "${2:-1}"
}


function go_back_to_prev_line () {
  cols=$(tput cols)
  n=$(( $cols - 20 ))
  echo -en "\e[1A\e[${n}C"
}

function main() {
  target_tree="${SYMLINKTO_TREE%/}"
  if [ -z "$target_tree" ]; then
    error "Set SYMLINKTO_TREE before using symlinkto"
  fi
  target_tree="${target_tree/#\~/$HOME}/"

  for target in $(tree -afiF --prune --noreport "$here"); do
    if [ -f "$target" ]; then
      echo -n "T: ~/${target/$target_tree/} ... "

      link="$HOME/${target/$target_tree/}"
      link_parent="$(dirname $link)"
      if [ -L "$link" ]; then
        echo -n "already symlinked. "
        read -p 'Remove? [y/N]: ' resp
        resp=${resp:-n}
        go_back_to_prev_line
        if [ $resp = "Y" ] || [ $resp = "y" ]; then
          rm "$link"
          echo "... symlink removed"
        else
          echo "... symlink checked"
        fi
      elif [ -e "$link" ]; then
        echo "file exists"
      elif [ ! -d "$link_parent" ]; then
        echo "parent directory missing"
      else
        echo -n "not yet symlinked. "
        read -p 'Create? [y/N]: ' resp
        resp=${resp:-n}
        go_back_to_prev_line
        if [ $resp = "Y" ] || [ $resp = "y" ]; then
          ln -s "$target" "$link"
          echo "... symlink created"
        else
          echo "... symlink skipped"
        fi
      fi
    fi
  done
}


if [ "$0" = "${BASH_SOURCE[0]}" ]; then
  while getopts "hv" opt; do
    case $opt in
      h|\?)
        if [ "$opt" = "h" ]; then usage 0; else usage; fi
        ;;
      v)
        echo "$version" ; exit 0;
        ;;
    esac
  done
  shift $((OPTIND - 1))

  main "$@"
fi
