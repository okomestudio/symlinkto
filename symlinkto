#!/usr/bin/env bash

set -e

readonly scriptname="${0##*/}"
readonly version=1.0.0

here="$(realpath "$(pwd)")"

function usage() {
  cat <<USAGE >&2
Usage: $scriptname

Interactively create symlinks to version-controlled files.

The environment variable SYMLINKTO_TREE should point to the root of
the version-controlled repository of symlink target files.

  -h   show this help
  -v   show script version

 Author: Taro Sato <okomestudio@gmail.com>
   Date: March 18, 2025
    WWW: https://github.com/okomestudio/symlinkto
Version: $scriptname $version
USAGE
  exit "${1:-1}"
}

function error() {
  >&2 echo "$scriptname: $1"
  >&2 echo "Try '$scriptname -h' for more information."
  exit "${2:-1}"
}

function go_back_to_prev_line() {
  cols=$(tput cols)
  n=$(("$cols" - 20))
  echo -en "\e[1A\e[${n}C"
}

function process_candidate() {
  # 'target' is a file under SYMLINKTO_TREE (target_tree).
  target=$1
  target_tree=$2

  if [ -f "$target" ]; then
    echo -n "T: ~${target/$target_tree/} ... "

    link="$HOME/${target/$target_tree/}"

    link_parent="$(dirname "$link")"
    if [ ! -d "$link_parent" ]; then
      echo -n "parent directory missing. "
      read -rp 'Create? [y/N]: ' resp
      resp=${resp:-n}
      if [ "$resp" = "Y" ] || [ "$resp" = "y" ]; then
        mkdir "$link_parent"
        echo -n "... parent directory created ... "
      else
        echo "... symlink skipped"
        return
      fi
    fi

    if [ -L "$link" ]; then
      echo -n "already symlinked. "
      read -rp 'Remove? [y/N]: ' resp
      resp=${resp:-n}
      go_back_to_prev_line
      if [ "$resp" = "Y" ] || [ "$resp" = "y" ]; then
        rm "$link"
        echo "... symlink removed"
      else
        echo "... symlink checked"
      fi
    elif [ -e "$link" ]; then
      echo "file exists"
    else
      echo -n "not yet symlinked. "
      read -rp 'Create? [y/N]: ' resp
      resp=${resp:-n}
      go_back_to_prev_line
      if [ "$resp" = "Y" ] || [ "$resp" = "y" ]; then
        ln -s "$target" "$link"
        echo "... symlink created"
      else
        echo "... symlink skipped"
      fi
    fi
  fi
}

function main() {
  if [ -z "$SYMLINKTO_TREE" ]; then
    error "Set SYMLINKTO_TREE before using symlinkto"
  fi
  target_tree="$(realpath "$SYMLINKTO_TREE")"

  if [[ "$here" == "$target_tree"* ]]; then
    point_under_target_tree="$here"
  else
    point_under_target_tree="$target_tree${here/$HOME/}"
  fi
  for target in $(tree -afiF --prune --noreport "$point_under_target_tree"); do
    process_candidate "$target" "$target_tree"
  done
}

if [ "$0" = "${BASH_SOURCE[0]}" ]; then
  while getopts "hv" opt; do
    case $opt in
    h | \?)
      if [ "$opt" = "h" ]; then usage 0; else usage; fi
      ;;
    v)
      echo "$version"
      exit 0
      ;;
    esac
  done
  shift $((OPTIND - 1))

  main "$@"
fi
